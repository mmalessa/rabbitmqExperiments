old_sound_rabbit_mq:
    connections:
        default:
            host:     '%env(RABBITMQ_HOST)%'
            port:     5672
            user:     '%env(RABBITMQ_USER)%'
            password: '%env(RABBITMQ_PASSWORD)%'
            vhost:    '%env(RABBITMQ_VHOST)%'

            lazy:     true
            connection_timeout: 3600
            read_write_timeout: 3600
            keepalive: false
            heartbeat: 60

        ssl_connection:
            host:     '%env(RABBITMQ_HOST)%'
            port:     5671
            user:     '%env(RABBITMQ_USER)%'
            password: '%env(RABBITMQ_PASSWORD)%'
            vhost:    '%env(RABBITMQ_VHOST)%'

            lazy:     true
            connection_timeout: 3600
            read_write_timeout: 3600
            keepalive: false
            heartbeat: 60

            ssl_context:
                cacert:   '/home/projects/rabbitmqExperiments/config/ssl/ca/cacert.pem'
                local_cert:   '/home/projects/rabbitmqExperiments/config/ssl/client/cert.pem'
                local_pk:     '/home/projects/rabbitmqExperiments/config/ssl/client/key.pem'
                verify_peer: false
                verify_peer_name: false
                allow_self_signed: true
                ciphers: 'TLSv1.2'

    producers:
        # use 'old_sound_rabbit_mq.my_task_producer' service to send data.
        my_task:
            connection:       default
            exchange_options: { name: 'main_events', type: topic }

    consumers:
        single_task:
            connection:       default
            exchange_options: { name: 'main_events', type: topic}
            queue_options:
                name: 'task_job_done'
                durable: true
                auto_delete: false
                routing_keys:
                    - 'test.task_job_done'
            callback:         App\Consumer\SingleTaskConsumer

        all_logs:
            connection:       default
            exchange_options: { name: 'main_events', type: topic}
            queue_options:
                name: 'all_logs'
                durable: true
                auto_delete: false
                arguments:
                    x-dead-letter-exchange: ['S', 'main_events_dead']
                    x-dead-letter-routing-key: ['S', 'test.task_job_done']
                routing_keys:
                - '#'
            callback:         App\Consumer\AllLogsConsumer

        all_logs_dead:
            connection:       default
            exchange_options: { name: 'main_events_dead', type: topic}
            queue_options:
                name: 'all_logs_dead'
                durable: true
                auto_delete: false
#                arguments:
#                    x-dead-letter-exchange: ['S', 'main_events']
#                    x-dead-letter-routing-key: ['S', 'test.task_job_done']
                routing_keys:
                - '#'
            callback:         App\Consumer\AllLogsConsumer

# arguments to test:
# x-dead-letter-exchange ['S', 'all_logs']
# x-dead-letter-routing-key
# x-message-ttl: ['I', 3600000]